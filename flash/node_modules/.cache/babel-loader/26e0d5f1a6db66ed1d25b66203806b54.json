{"ast":null,"code":"import React, { forwardRef } from 'react';\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = React.createContext({});\n\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, Object.assign({}, props, {\n      components: allComponents\n    }));\n  };\n};\n\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : Object.assign({}, contextComponents, components);\n  }\n\n  return allComponents;\n};\n\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(ref) {\n    var children = ref.children;\n    return React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = forwardRef(function (props, ref) {\n  var propComponents = props.components;\n  var mdxType = props.mdxType;\n  var originalType = props.originalType;\n  var parentName = props.parentName;\n  var rest = objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n  var etc = rest;\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[parentName + \".\" + type] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return React.createElement(Component, Object.assign({}, {\n      ref: ref\n    }, etc, {\n      components: propComponents\n    }));\n  }\n\n  return React.createElement(Component, Object.assign({}, {\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\n\nfunction createElement(type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, useMDXComponents, withMDXComponents, createElement as mdx };","map":{"version":3,"sources":["/home/mustafa/code/hack/project/flash/node_modules/@mdx-js/react/dist/index.es.js"],"names":["React","forwardRef","isFunction","obj","MDXContext","createContext","withMDXComponents","Component","props","allComponents","useMDXComponents","components","createElement","Object","assign","contextComponents","useContext","MDXProvider","Provider","value","children","objectWithoutProperties","exclude","target","k","prototype","hasOwnProperty","call","indexOf","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","ref","Fragment","MDXCreateElement","propComponents","mdxType","originalType","parentName","rest","etc","type","displayName","args","arguments","argsLength","length","createElementArgArray","Array","newProps","key","i","apply","mdx"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\n\nvar isFunction = function (obj) { return typeof obj === 'function'; };\n\nvar MDXContext = React.createContext({});\nvar withMDXComponents = function (Component) { return function (props) {\n  var allComponents = useMDXComponents(props.components);\n  return React.createElement( Component, Object.assign({}, props, { components: allComponents }));\n}; };\nvar useMDXComponents = function (components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : Object.assign({}, contextComponents,\n      components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function (props) {\n  var allComponents = useMDXComponents(props.components);\n  return React.createElement( MDXContext.Provider, { value: allComponents },\n      props.children\n    );\n};\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function (ref) {\n    var children = ref.children;\n\n    return React.createElement(React.Fragment, {}, children);\n}\n};\nvar MDXCreateElement = forwardRef(function (props, ref) {\n  var propComponents = props.components;\n  var mdxType = props.mdxType;\n  var originalType = props.originalType;\n  var parentName = props.parentName;\n  var rest = objectWithoutProperties( props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"] );\n  var etc = rest;\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[(parentName + \".\" + type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return React.createElement(Component, Object.assign({}, {ref: ref},\n      etc,\n      {components: propComponents}));\n  }\n\n  return React.createElement(Component, Object.assign({}, {ref: ref},\n    etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, useMDXComponents, withMDXComponents, createElement as mdx };\n"]},"metadata":{},"sourceType":"module"}